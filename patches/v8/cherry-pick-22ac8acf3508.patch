From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jakob Kummerow <jkummerow@chromium.org>
Date: Mon, 17 Mar 2025 17:26:24 +0100
Subject: Make F.p.caller return null when called from Wasm

Returning the calling Wasm function isn't generally possible when
that function isn't exported; skipping that and returning something
else would be either surprising or plain incorrect.

Fixed: 403364367
Change-Id: I2406a0abe15a8d66da06302e946ce653aaff259d
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/6362435
Reviewed-by: Toon Verwaest <verwaest@chromium.org>
Commit-Queue: Toon Verwaest <verwaest@chromium.org>
Auto-Submit: Jakob Kummerow <jkummerow@chromium.org>
Cr-Commit-Position: refs/heads/main@{#99296}

diff --git a/src/builtins/accessors.cc b/src/builtins/accessors.cc
index 35f665e0b8404f811c66f31b62abf7d971d3022b..579342abe0e4d2feb3b770abaa0dd16641e5bde9 100644
--- a/src/builtins/accessors.cc
+++ b/src/builtins/accessors.cc
@@ -570,24 +570,16 @@ class FrameFunctionIterator {
     return true;
   }
 
-  // Iterate through functions until the next non-toplevel one is found.
+  // Iterate through functions, at least one step, until the first candidate
+  // is found that is not toplevel and either user-provided JavaScript or
+  // "native" (not defined in user-provided scripts, but directly exposed).
   // Returns true if one is found, and false if the iterator ends before.
-  bool FindNextNonTopLevel() {
+  bool FindNextNonTopLevelNativeOrUserJavaScript() {
     do {
       if (!next().ToHandle(&function_)) return false;
-    } while (function_->shared()->is_toplevel());
-    return true;
-  }
-
-  // Iterate through function until the first native or user-provided function
-  // is found. Functions not defined in user-provided scripts are not visible
-  // unless directly exposed, in which case the native flag is set on them.
-  // Returns true if one is found, and false if the iterator ends before.
-  bool FindFirstNativeOrUserJavaScript() {
-    while (!function_->shared()->native() &&
-           !function_->shared()->IsUserJavaScript()) {
-      if (!next().ToHandle(&function_)) return false;
-    }
+    } while (function_->shared()->is_toplevel() ||
+             (!function_->shared()->native() &&
+              !function_->shared()->IsUserJavaScript()));
     return true;
   }
 
@@ -664,13 +656,10 @@ MaybeHandle<JSFunction> FindCaller(Isolate* isolate,
   if (!it.Find(function)) {
     return MaybeHandle<JSFunction>();
   }
-  // Find previously called non-toplevel function.
-  if (!it.FindNextNonTopLevel()) {
-    return MaybeHandle<JSFunction>();
-  }
-  // Find the first user-land JavaScript function (or the entry point into
-  // native JavaScript builtins in case such a builtin was the caller).
-  if (!it.FindFirstNativeOrUserJavaScript()) {
+  // Find previously called non-toplevel function that is also a user-land
+  // JavaScript function (or the entry point into native JavaScript builtins
+  // in case such a builtin was the caller).
+  if (!it.FindNextNonTopLevelNativeOrUserJavaScript()) {
     return MaybeHandle<JSFunction>();
   }
 
