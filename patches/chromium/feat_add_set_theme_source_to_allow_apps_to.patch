From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Samuel Attard <sattard@slack-corp.com>
Date: Mon, 26 Aug 2019 14:32:41 -0700
Subject: feat: add set_theme_source to allow apps to override chromiums
 internal theme choice

This patch is required as Chromium doesn't currently let folks using
//ui override the theme choice in NativeTheme.  It defaults to
respecting the OS theme choice and some apps don't always want to do
that.  With this patch we can override the theme value that Chromium
uses internally for things like menus and devtools.

We can remove this patch once it has in some shape been upstreamed.

diff --git a/ui/native_theme/native_theme.h b/ui/native_theme/native_theme.h
index 8391cd1469516e83b2cc1466e121bfeed5497c8e..6bed02855d0917805a43fab111d41702af94368e 100644
--- a/ui/native_theme/native_theme.h
+++ b/ui/native_theme/native_theme.h
@@ -493,6 +493,8 @@ class COMPONENT_EXPORT(NATIVE_THEME) NativeTheme {
   void set_page_colors(PageColors page_colors) { page_colors_ = page_colors; }
 
   PreferredColorScheme preferred_color_scheme() const {
+    if (theme_source() == ThemeSource::kForcedLight) return PreferredColorScheme::kLight;
+    if (theme_source() == ThemeSource::kForcedDark) return PreferredColorScheme::kDark;
     return preferred_color_scheme_;
   }
   void set_preferred_color_scheme(PreferredColorScheme preferred_color_scheme) {
@@ -536,6 +538,24 @@ class COMPONENT_EXPORT(NATIVE_THEME) NativeTheme {
   // Whether dark mode is forced via command-line flag.
   static bool IsForcedDarkMode();
 
+  enum ThemeSource {
+    kSystem,
+    kForcedDark,
+    kForcedLight,
+  };
+
+  ThemeSource theme_source() const {
+    return theme_source_;
+  }
+
+  void set_theme_source(ThemeSource theme_source) {
+    bool was_dark = preferred_color_scheme() == PreferredColorScheme::kDark;
+    theme_source_ = theme_source;
+    if ((preferred_color_scheme() == PreferredColorScheme::kDark) != was_dark) {
+      NotifyOnNativeThemeUpdated();
+    }
+  }
+
  protected:
   explicit NativeTheme(
       ui::SystemTheme system_theme = ui::SystemTheme::kDefault);
@@ -590,6 +610,7 @@ class COMPONENT_EXPORT(NATIVE_THEME) NativeTheme {
   std::optional<ui::ColorProviderKey::SchemeVariant> scheme_variant_;
   bool should_use_system_accent_color_ = true;
   base::TimeDelta caret_blink_interval_;
+  ThemeSource theme_source_ = ThemeSource::kSystem;
 
   raw_ptr<NativeTheme> associated_web_instance_ = nullptr;
 
