From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Colin Blundell <blundell@chromium.org>
Date: Mon, 19 May 2025 23:49:13 -0700
Subject: Revert "[webgl] Add stub WebGL[2]RenderingContextWebGPU"

This reverts commit e530c1578622adea59ae2ac3a586ae090681422b.

Reason for revert: Multiple eng reporting that this is causing build failures due to too-long pathnames, with no immediate feasible workaround

Bug: 414506479
Original change's description:
> [webgl] Add stub WebGL[2]RenderingContextWebGPU
>
> These implementations of the WebGL IDL are meant to be implemented with
> ANGLE running on top of the WebGPU using dawn::wire, the same way that
> WebGPU's JS bindings are implemented. If successful, this would allow
> reducing the GPU process attack surface as it wouldn't need to support
> the GLES command buffer anymore.
>
> Binary-Size: Required initial increase to add WebGLOnWebGPU.
> Fuchsia-Binary-Size: Increase is temporary, will be more than compensated by linking ANGLE statically (-400kb).
> Bug: 414506479
> Change-Id: I63d88a06d0d91e9842b48414d335df99522bba8d
> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6494836
> Reviewed-by: Brandon Jones <bajones@chromium.org>
> Commit-Queue: Corentin Wallez <cwallez@chromium.org>
> Reviewed-by: Colin Blundell <blundell@chromium.org>
> Cr-Commit-Position: refs/heads/main@{#1462154}

Bug: 414506479
No-Presubmit: true
No-Tree-Checks: true
No-Try: true
Change-Id: I0d4f94e9ceabd770250390d6f4ffe844a4ad00cb
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6565622
Auto-Submit: Colin Blundell <blundell@chromium.org>
Commit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Cr-Commit-Position: refs/heads/main@{#1462590}

diff --git a/third_party/blink/renderer/bindings/generated_in_modules.gni b/third_party/blink/renderer/bindings/generated_in_modules.gni
index b42efe786712f81b5b86ff90f62a7ee486c16c9a..c8177157631aeb7a0d8c65c57ac6da5b74da8b1f 100644
--- a/third_party/blink/renderer/bindings/generated_in_modules.gni
+++ b/third_party/blink/renderer/bindings/generated_in_modules.gni
@@ -2986,8 +2986,6 @@ generated_interface_sources_in_modules = [
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_web_transport_error.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl2_rendering_context.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl2_rendering_context.h",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl2_rendering_context_webgpu.cc",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl2_rendering_context_webgpu.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_active_info.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_active_info.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_blend_func_extended.cc",
@@ -3046,8 +3044,6 @@ generated_interface_sources_in_modules = [
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_renderbuffer.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context.h",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context_webgpu.cc",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_rendering_context_webgpu.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_sampler.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_sampler.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_webgl_shader.cc",
@@ -3282,8 +3278,8 @@ generated_union_sources_in_modules = [
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_boolean_mediatrackconstraints.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasfilter_string.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasfilter_string.h",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.cc",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webglrenderingcontext.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webglrenderingcontext.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_client_messageport_serviceworker.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_client_messageport_serviceworker.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_constraindomstringparameters_string_stringsequence.cc",
@@ -3310,8 +3306,8 @@ generated_union_sources_in_modules = [
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpuautolayoutmode_gpupipelinelayout.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpubufferbinding_gpuexternaltexture_gpusampler_gputextureview.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpubufferbinding_gpuexternaltexture_gpusampler_gputextureview.h",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.cc",
-  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.h",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webglrenderingcontext.cc",
+  "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webglrenderingcontext.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpuextent3ddict_unsignedlongenforcerangesequence.cc",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpuextent3ddict_unsignedlongenforcerangesequence.h",
   "$root_gen_dir/third_party/blink/renderer/bindings/modules/v8/v8_union_gpuorigin2ddict_unsignedlongenforcerangesequence.cc",
diff --git a/third_party/blink/renderer/bindings/idl_in_modules.gni b/third_party/blink/renderer/bindings/idl_in_modules.gni
index e48d158c150ab1a0bc9ed309310171e12c6de22e..e378f59cd4a6a7d3482fbb7b43e207d9f14ffb45 100644
--- a/third_party/blink/renderer/bindings/idl_in_modules.gni
+++ b/third_party/blink/renderer/bindings/idl_in_modules.gni
@@ -997,7 +997,6 @@ static_idl_files_in_modules = [
   "//third_party/blink/renderer/modules/webgl/ovr_multiview_2.idl",
   "//third_party/blink/renderer/modules/webgl/webgl2_rendering_context.idl",
   "//third_party/blink/renderer/modules/webgl/webgl2_rendering_context_base.idl",
-  "//third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_active_info.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_blend_func_extended.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_buffer.idl",
@@ -1030,7 +1029,6 @@ static_idl_files_in_modules = [
   "//third_party/blink/renderer/modules/webgl/webgl_renderbuffer.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_rendering_context.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_rendering_context_base.idl",
-  "//third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_sampler.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_shader.idl",
   "//third_party/blink/renderer/modules/webgl/webgl_shader_pixel_local_storage.idl",
diff --git a/third_party/blink/renderer/core/html/canvas/canvas_rendering_context.h b/third_party/blink/renderer/core/html/canvas/canvas_rendering_context.h
index 23dea4bb35b90c20dc6d7de9cc5c8356cbcde2f2..392b7a1c1574045d5118be10fd50068cc419afb3 100644
--- a/third_party/blink/renderer/core/html/canvas/canvas_rendering_context.h
+++ b/third_party/blink/renderer/core/html/canvas/canvas_rendering_context.h
@@ -80,9 +80,9 @@ class ImageBitmap;
 class ScriptState;
 class StaticBitmapImage;
 using V8RenderingContext = class
-    V8UnionCanvasRenderingContext2DOrGPUCanvasContextOrImageBitmapRenderingContextOrWebGL2RenderingContextOrWebGL2RenderingContextWebGPUOrWebGLRenderingContextOrWebGLRenderingContextWebGPU;
+    V8UnionCanvasRenderingContext2DOrGPUCanvasContextOrImageBitmapRenderingContextOrWebGL2RenderingContextOrWebGLRenderingContext;
 using V8OffscreenRenderingContext = class
-    V8UnionGPUCanvasContextOrImageBitmapRenderingContextOrOffscreenCanvasRenderingContext2DOrWebGL2RenderingContextOrWebGL2RenderingContextWebGPUOrWebGLRenderingContextOrWebGLRenderingContextWebGPU;
+    V8UnionGPUCanvasContextOrImageBitmapRenderingContextOrOffscreenCanvasRenderingContext2DOrWebGL2RenderingContextOrWebGLRenderingContext;
 class WebGraphicsContext3DVideoFramePool;
 
 class CORE_EXPORT CanvasRenderingContext
diff --git a/third_party/blink/renderer/modules/canvas/htmlcanvas/html_canvas_element_module.idl b/third_party/blink/renderer/modules/canvas/htmlcanvas/html_canvas_element_module.idl
index 261e9ad46901da85ea2d72c8f6b8e12b23641b94..70d0c26f00fc947af54d8ac8388a68c15d3b43dd 100644
--- a/third_party/blink/renderer/modules/canvas/htmlcanvas/html_canvas_element_module.idl
+++ b/third_party/blink/renderer/modules/canvas/htmlcanvas/html_canvas_element_module.idl
@@ -7,8 +7,6 @@
 typedef (CanvasRenderingContext2D or
          WebGLRenderingContext or
          WebGL2RenderingContext or
-         WebGLRenderingContextWebGPU or
-         WebGL2RenderingContextWebGPU or
          ImageBitmapRenderingContext or
          GPUCanvasContext) RenderingContext;
 
diff --git a/third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h b/third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h
index aa7114367cfefe7871fcf6eb69bc1ac96739bf37..cfa8ac671aa20c8631c2524bd970da21bdf57c06 100644
--- a/third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h
+++ b/third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h
@@ -8,6 +8,6 @@
 // This is just a forwarding header to avoid including an enormous filename in
 // each file that needs the declaration of the union that is used for
 // RenderingContext.
-#include "third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.h"
+#include "third_party/blink/renderer/bindings/modules/v8/v8_union_canvasrenderingcontext2d_gpucanvascontext_imagebitmaprenderingcontext_webgl2renderingcontext_webglrenderingcontext.h"
 
 #endif  // THIRD_PARTY_BLINK_RENDERER_MODULES_CANVAS_HTMLCANVAS_V8_RENDERING_CONTEXT_H_
diff --git a/third_party/blink/renderer/modules/canvas/offscreencanvas/offscreen_canvas_module.idl b/third_party/blink/renderer/modules/canvas/offscreencanvas/offscreen_canvas_module.idl
index a15d8d671f7504c9e771e607485413728479423b..f88b06ce555b0a49ac40a93ce52cb49a5bf8c6e6 100644
--- a/third_party/blink/renderer/modules/canvas/offscreencanvas/offscreen_canvas_module.idl
+++ b/third_party/blink/renderer/modules/canvas/offscreencanvas/offscreen_canvas_module.idl
@@ -7,8 +7,6 @@
 typedef (OffscreenCanvasRenderingContext2D or
          WebGLRenderingContext or
          WebGL2RenderingContext or
-         WebGLRenderingContextWebGPU or
-         WebGL2RenderingContextWebGPU or
          ImageBitmapRenderingContext or
          GPUCanvasContext) OffscreenRenderingContext;
 enum OffscreenRenderingContextType { "2d", "webgl", "webgl2", "bitmaprenderer", "webgpu" };
diff --git a/third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h b/third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h
index 3742d1e586615165f3bfdddbbd054e13a45e244d..b44bacfe4240240b0f65bdafd1ae8bc37182bdc7 100644
--- a/third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h
+++ b/third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h
@@ -8,6 +8,6 @@
 // This is just a forwarding header to avoid including an enormous filename in
 // each file that needs the declaration of the union that is used for
 // OffscreenRenderingContext.
-#include "third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webgl2renderingcontextwebgpu_webglrenderingcontext_webglrenderingcontextwebgpu.h"
+#include "third_party/blink/renderer/bindings/modules/v8/v8_union_gpucanvascontext_imagebitmaprenderingcontext_offscreencanvasrenderingcontext2d_webgl2renderingcontext_webglrenderingcontext.h"
 
 #endif  // THIRD_PARTY_BLINK_RENDERER_MODULES_CANVAS_OFFSCREENCANVAS_V8_OFFSCREEN_RENDERING_CONTEXT_H_
diff --git a/third_party/blink/renderer/modules/webgl/BUILD.gn b/third_party/blink/renderer/modules/webgl/BUILD.gn
index 5c1ff9afbfea45aba7b1fa68234fc1c35914aa95..08d7b3f52c5c2cd6d1199396b2ce1775f2289798 100644
--- a/third_party/blink/renderer/modules/webgl/BUILD.gn
+++ b/third_party/blink/renderer/modules/webgl/BUILD.gn
@@ -79,8 +79,6 @@ blink_modules_sources("webgl") {
     "webgl2_rendering_context.h",
     "webgl2_rendering_context_base.cc",
     "webgl2_rendering_context_base.h",
-    "webgl2_rendering_context_webgpu.cc",
-    "webgl2_rendering_context_webgpu.h",
     "webgl_active_info.h",
     "webgl_blend_func_extended.cc",
     "webgl_blend_func_extended.h",
@@ -153,10 +151,6 @@ blink_modules_sources("webgl") {
     "webgl_rendering_context.h",
     "webgl_rendering_context_base.cc",
     "webgl_rendering_context_base.h",
-    "webgl_rendering_context_webgpu.cc",
-    "webgl_rendering_context_webgpu.h",
-    "webgl_rendering_context_webgpu_base.cc",
-    "webgl_rendering_context_webgpu_base.h",
     "webgl_sampler.cc",
     "webgl_sampler.h",
     "webgl_shader.cc",
diff --git a/third_party/blink/renderer/modules/webgl/DEPS b/third_party/blink/renderer/modules/webgl/DEPS
index b0efa5dd316811a166016c144c048e15130586a3..ec20717bde034b51a30a949efee2e24db9bac499 100644
--- a/third_party/blink/renderer/modules/webgl/DEPS
+++ b/third_party/blink/renderer/modules/webgl/DEPS
@@ -1,5 +1,4 @@
 include_rules = [
-    "+base/notimplemented.h",
     "+device/vr/buildflags/buildflags.h",
     "+device/vr/public/mojom/vr_service.mojom-blink.h",
     "+device/vr/public/mojom/vr_service.mojom-blink-forward.h",
diff --git a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.cc b/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.cc
deleted file mode 100644
index 290b5d688cbe44bb17ea73e388393f618c9e42c4..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.cc
+++ /dev/null
@@ -1,29 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#include "third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.h"
-
-#include "base/notimplemented.h"
-#include "third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h"
-#include "third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h"
-
-namespace blink {
-
-WebGL2RenderingContextWebGPU::WebGL2RenderingContextWebGPU(
-    CanvasRenderingContextHost* host,
-    const CanvasContextCreationAttributesCore& requested_attributes)
-    : WebGLRenderingContextWebGPUBase(host,
-                                      requested_attributes,
-                                      CanvasRenderingAPI::kWebgl2) {}
-
-V8RenderingContext* WebGL2RenderingContextWebGPU::AsV8RenderingContext() {
-  return MakeGarbageCollected<V8RenderingContext>(this);
-}
-
-V8OffscreenRenderingContext*
-WebGL2RenderingContextWebGPU::AsV8OffscreenRenderingContext() {
-  return MakeGarbageCollected<V8OffscreenRenderingContext>(this);
-}
-
-}  // namespace blink
diff --git a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.h b/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.h
deleted file mode 100644
index db83b4ac9d3138dc82a2522adc22ded58f7d1627..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.h
+++ /dev/null
@@ -1,28 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL2_RENDERING_CONTEXT_WEBGPU_H_
-#define THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL2_RENDERING_CONTEXT_WEBGPU_H_
-
-#include "third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h"
-
-namespace blink {
-
-class WebGL2RenderingContextWebGPU final
-    : public WebGLRenderingContextWebGPUBase {
-  DEFINE_WRAPPERTYPEINFO();
-
- public:
-  WebGL2RenderingContextWebGPU(
-      CanvasRenderingContextHost* host,
-      const CanvasContextCreationAttributesCore& requested_attributes);
-
-  // CanvasRenderingContext implementation
-  V8RenderingContext* AsV8RenderingContext() final;
-  V8OffscreenRenderingContext* AsV8OffscreenRenderingContext() final;
-};
-
-}  // namespace blink
-
-#endif  // THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL2_RENDERING_CONTEXT_WEBGPU_H_
diff --git a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.idl b/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.idl
deleted file mode 100644
index ac76ded5b53871030a6b7496fa3b24d79f27b56d..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.idl
+++ /dev/null
@@ -1,13 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.7
-
-[
-    ActiveScriptWrappable,
-    Exposed=(Window,Worker),
-    RuntimeEnabled=WebGLOnWebGPU
-] interface WebGL2RenderingContextWebGPU { };
-WebGL2RenderingContextWebGPU includes WebGLRenderingContextBase;
-WebGL2RenderingContextWebGPU includes WebGL2RenderingContextBase;
diff --git a/third_party/blink/renderer/modules/webgl/webgl_context_factory.cc b/third_party/blink/renderer/modules/webgl/webgl_context_factory.cc
index 8a983f1720d94391f641be229c8fcac0fb07d148..048feec570e2bcdac3c57ac14094ba28635b112f 100644
--- a/third_party/blink/renderer/modules/webgl/webgl_context_factory.cc
+++ b/third_party/blink/renderer/modules/webgl/webgl_context_factory.cc
@@ -4,15 +4,11 @@
 
 #include "third_party/blink/renderer/modules/webgl/webgl_context_factory.h"
 
-#include "base/notimplemented.h"
 #include "third_party/blink/renderer/core/html/canvas/canvas_context_creation_attributes_core.h"
 #include "third_party/blink/renderer/core/html/canvas/html_canvas_element.h"
 #include "third_party/blink/renderer/modules/webgl/webgl2_rendering_context.h"
-#include "third_party/blink/renderer/modules/webgl/webgl2_rendering_context_webgpu.h"
 #include "third_party/blink/renderer/modules/webgl/webgl_context_event.h"
 #include "third_party/blink/renderer/modules/webgl/webgl_rendering_context.h"
-#include "third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.h"
-#include "third_party/blink/renderer/platform/runtime_enabled_features.h"
 
 namespace blink {
 
@@ -32,11 +28,7 @@ WebGLContextFactory::WebGLContextFactory(bool is_webgl2)
 CanvasRenderingContext* WebGLContextFactory::Create(
     CanvasRenderingContextHost* host,
     const CanvasContextCreationAttributesCore& attrs) {
-  if (RuntimeEnabledFeatures::WebGLOnWebGPUEnabled()) {
-    return CreateInternalWebGPU(host, attrs);
-  } else {
-    return CreateInternal(host, attrs);
-  }
+  return CreateInternal(host, attrs);
 }
 
 CanvasRenderingContext* WebGLContextFactory::CreateInternal(
@@ -106,16 +98,6 @@ CanvasRenderingContext* WebGLContextFactory::CreateInternal(
   }
 }
 
-CanvasRenderingContext* WebGLContextFactory::CreateInternalWebGPU(
-    CanvasRenderingContextHost* host,
-    const CanvasContextCreationAttributesCore& attrs) {
-  if (is_webgl2_) {
-    return MakeGarbageCollected<WebGL2RenderingContextWebGPU>(host, attrs);
-  } else {
-    return MakeGarbageCollected<WebGLRenderingContextWebGPU>(host, attrs);
-  }
-}
-
 CanvasRenderingContext::CanvasRenderingAPI
 WebGLContextFactory::GetRenderingAPI() const {
   if (is_webgl2_) {
diff --git a/third_party/blink/renderer/modules/webgl/webgl_context_factory.h b/third_party/blink/renderer/modules/webgl/webgl_context_factory.h
index e58bbe3f6eec6e64a89d08e7e83d63d9b0841a04..df24c7085def9fc934a835635c10ebf7382ba528 100644
--- a/third_party/blink/renderer/modules/webgl/webgl_context_factory.h
+++ b/third_party/blink/renderer/modules/webgl/webgl_context_factory.h
@@ -39,9 +39,6 @@ class WebGLContextFactory : public CanvasRenderingContextFactory {
   CanvasRenderingContext* CreateInternal(
       CanvasRenderingContextHost*,
       const CanvasContextCreationAttributesCore&);
-  CanvasRenderingContext* CreateInternalWebGPU(
-      CanvasRenderingContextHost*,
-      const CanvasContextCreationAttributesCore&);
 
   const char* GetContextName() const;
   Platform::ContextType GetContextType() const;
diff --git a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.cc b/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.cc
deleted file mode 100644
index ead39056f29ff7080c66d983489b090ad4b1ce8d..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.cc
+++ /dev/null
@@ -1,29 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#include "third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.h"
-
-#include "base/notimplemented.h"
-#include "third_party/blink/renderer/modules/canvas/htmlcanvas/v8_rendering_context.h"
-#include "third_party/blink/renderer/modules/canvas/offscreencanvas/v8_offscreen_rendering_context.h"
-
-namespace blink {
-
-WebGLRenderingContextWebGPU::WebGLRenderingContextWebGPU(
-    CanvasRenderingContextHost* host,
-    const CanvasContextCreationAttributesCore& requested_attributes)
-    : WebGLRenderingContextWebGPUBase(host,
-                                      requested_attributes,
-                                      CanvasRenderingAPI::kWebgl) {}
-
-V8RenderingContext* WebGLRenderingContextWebGPU::AsV8RenderingContext() {
-  return MakeGarbageCollected<V8RenderingContext>(this);
-}
-
-V8OffscreenRenderingContext*
-WebGLRenderingContextWebGPU::AsV8OffscreenRenderingContext() {
-  return MakeGarbageCollected<V8OffscreenRenderingContext>(this);
-}
-
-}  // namespace blink
diff --git a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.h b/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.h
deleted file mode 100644
index d0f3d1c34212165549eacf89b8d62ad611c0e168..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.h
+++ /dev/null
@@ -1,28 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_H_
-#define THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_H_
-
-#include "third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h"
-
-namespace blink {
-
-class WebGLRenderingContextWebGPU final
-    : public WebGLRenderingContextWebGPUBase {
-  DEFINE_WRAPPERTYPEINFO();
-
- public:
-  WebGLRenderingContextWebGPU(
-      CanvasRenderingContextHost* host,
-      const CanvasContextCreationAttributesCore& requested_attributes);
-
-  // CanvasRenderingContext implementation
-  V8RenderingContext* AsV8RenderingContext() final;
-  V8OffscreenRenderingContext* AsV8OffscreenRenderingContext() final;
-};
-
-}  // namespace blink
-
-#endif  // THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_H_
diff --git a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.idl b/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.idl
deleted file mode 100644
index 2f4c23c68dc658cd8f91a72948b78f1f39c92578..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu.idl
+++ /dev/null
@@ -1,16 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-// https://www.khronos.org/registry/webgl/specs/latest/1.0/#WebGLRenderingContext
-
-[
-    ActiveScriptWrappable,
-    Exposed=(Window,Worker),
-    RuntimeEnabled=WebGLOnWebGPU
-] interface WebGLRenderingContextWebGPU {
-
-    [RuntimeEnabled=WebGLDrawingBufferStorage] const GLenum RGB8   = 0x8051;
-    [RuntimeEnabled=WebGLDrawingBufferStorage] const GLenum RGBA8  = 0x8058;
-};
-WebGLRenderingContextWebGPU includes WebGLRenderingContextBase;
diff --git a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.cc b/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.cc
deleted file mode 100644
index 18d26cfe4faea0937d6f6c0c35424b29acc43786..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.cc
+++ /dev/null
@@ -1,2475 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#include "third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h"
-
-#include "base/notimplemented.h"
-
-namespace blink {
-
-WebGLRenderingContextWebGPUBase::WebGLRenderingContextWebGPUBase(
-    CanvasRenderingContextHost* host,
-    const CanvasContextCreationAttributesCore& requested_attributes,
-    CanvasRenderingAPI api)
-    : WebGLContextObjectSupport(
-          host->GetTopExecutionContext()->GetTaskRunner(TaskType::kWebGL),
-          /* is_webgl2 */ api == CanvasRenderingAPI::kWebgl2),
-      CanvasRenderingContext(host, requested_attributes, api) {}
-
-WebGLRenderingContextWebGPUBase::~WebGLRenderingContextWebGPUBase() {}
-
-// ****************************************************************************
-// Start of WebGLRenderingContextBase's IDL methods
-// ****************************************************************************
-
-V8UnionHTMLCanvasElementOrOffscreenCanvas*
-WebGLRenderingContextWebGPUBase::getHTMLOrOffscreenCanvas() const {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-int WebGLRenderingContextWebGPUBase::drawingBufferWidth() const {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-int WebGLRenderingContextWebGPUBase::drawingBufferHeight() const {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-GLenum WebGLRenderingContextWebGPUBase::drawingBufferFormat() const {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-V8PredefinedColorSpace
-WebGLRenderingContextWebGPUBase::drawingBufferColorSpace() const {
-  NOTIMPLEMENTED();
-  return V8PredefinedColorSpace(V8PredefinedColorSpace::Enum::kSRGB);
-}
-
-void WebGLRenderingContextWebGPUBase::setDrawingBufferColorSpace(
-    const V8PredefinedColorSpace& color_space,
-    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-V8PredefinedColorSpace WebGLRenderingContextWebGPUBase::unpackColorSpace()
-    const {
-  NOTIMPLEMENTED();
-  return V8PredefinedColorSpace(V8PredefinedColorSpace::Enum::kSRGB);
-}
-
-void WebGLRenderingContextWebGPUBase::setUnpackColorSpace(
-    const V8PredefinedColorSpace& color_space,
-    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::activeTexture(GLenum texture) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::attachShader(WebGLProgram*,
-                                                   WebGLShader*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindAttribLocation(WebGLProgram*,
-                                                         GLuint index,
-                                                         const String& name) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindBuffer(GLenum target,
-                                                 WebGLBuffer* buffer) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindFramebuffer(GLenum target,
-                                                      WebGLFramebuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindRenderbuffer(GLenum target,
-                                                       WebGLRenderbuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindTexture(GLenum target,
-                                                  WebGLTexture*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blendColor(GLfloat red,
-                                                 GLfloat green,
-                                                 GLfloat blue,
-                                                 GLfloat alpha) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blendEquation(GLenum mode) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blendEquationSeparate(GLenum mode_rgb,
-                                                            GLenum mode_alpha) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blendFunc(GLenum sfactor,
-                                                GLenum dfactor) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blendFuncSeparate(GLenum src_rgb,
-                                                        GLenum dst_rgb,
-                                                        GLenum src_alpha,
-                                                        GLenum dst_alpha) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bufferData(GLenum target,
-                                                 int64_t size,
-                                                 GLenum usage) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bufferData(GLenum target,
-                                                 DOMArrayBufferBase* data,
-                                                 GLenum usage) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bufferData(
-    GLenum target,
-    MaybeShared<DOMArrayBufferView> data,
-    GLenum usage) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bufferSubData(
-    GLenum target,
-    int64_t offset,
-    base::span<const uint8_t> data) {
-  NOTIMPLEMENTED();
-}
-
-GLenum WebGLRenderingContextWebGPUBase::checkFramebufferStatus(GLenum target) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-void WebGLRenderingContextWebGPUBase::clear(GLbitfield mask) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearColor(GLfloat red,
-                                                 GLfloat green,
-                                                 GLfloat blue,
-                                                 GLfloat alpha) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearDepth(GLfloat) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearStencil(GLint) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::colorMask(GLboolean red,
-                                                GLboolean green,
-                                                GLboolean blue,
-                                                GLboolean alpha) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compileShader(WebGLShader*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexImage2D(
-    GLenum target,
-    GLint level,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    MaybeShared<DOMArrayBufferView> data) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    MaybeShared<DOMArrayBufferView> data) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::copyTexImage2D(GLenum target,
-                                                     GLint level,
-                                                     GLenum internalformat,
-                                                     GLint x,
-                                                     GLint y,
-                                                     GLsizei width,
-                                                     GLsizei height,
-                                                     GLint border) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::copyTexSubImage2D(GLenum target,
-                                                        GLint level,
-                                                        GLint xoffset,
-                                                        GLint yoffset,
-                                                        GLint x,
-                                                        GLint y,
-                                                        GLsizei width,
-                                                        GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-WebGLBuffer* WebGLRenderingContextWebGPUBase::createBuffer() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLFramebuffer* WebGLRenderingContextWebGPUBase::createFramebuffer() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLProgram* WebGLRenderingContextWebGPUBase::createProgram() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLRenderbuffer* WebGLRenderingContextWebGPUBase::createRenderbuffer() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLShader* WebGLRenderingContextWebGPUBase::createShader(GLenum type) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLTexture* WebGLRenderingContextWebGPUBase::createTexture() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::cullFace(GLenum mode) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteBuffer(WebGLBuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteFramebuffer(WebGLFramebuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteProgram(WebGLProgram*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteRenderbuffer(WebGLRenderbuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteShader(WebGLShader*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::deleteTexture(WebGLTexture*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::depthFunc(GLenum) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::depthMask(GLboolean) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::depthRange(GLfloat z_near,
-                                                 GLfloat z_far) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::detachShader(WebGLProgram*,
-                                                   WebGLShader*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::disable(GLenum cap) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::disableVertexAttribArray(GLuint index) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawArrays(GLenum mode,
-                                                 GLint first,
-                                                 GLsizei count) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawElements(GLenum mode,
-                                                   GLsizei count,
-                                                   GLenum type,
-                                                   int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::enable(GLenum cap) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::enableVertexAttribArray(GLuint index) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::finish() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::flush() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::framebufferRenderbuffer(
-    GLenum target,
-    GLenum attachment,
-    GLenum renderbuffertarget,
-    WebGLRenderbuffer*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::framebufferTexture2D(GLenum target,
-                                                           GLenum attachment,
-                                                           GLenum textarget,
-                                                           WebGLTexture*,
-                                                           GLint level) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::frontFace(GLenum mode) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::generateMipmap(GLenum target) {
-  NOTIMPLEMENTED();
-}
-
-WebGLActiveInfo* WebGLRenderingContextWebGPUBase::getActiveAttrib(
-    WebGLProgram*,
-    GLuint index) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-WebGLActiveInfo* WebGLRenderingContextWebGPUBase::getActiveUniform(
-    WebGLProgram*,
-    GLuint index) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-std::optional<HeapVector<Member<WebGLShader>>>
-WebGLRenderingContextWebGPUBase::getAttachedShaders(WebGLProgram*) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-GLint WebGLRenderingContextWebGPUBase::getAttribLocation(WebGLProgram*,
-                                                         const String& name) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getBufferParameter(ScriptState*,
-                                                                GLenum target,
-                                                                GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLContextAttributes* WebGLRenderingContextWebGPUBase::getContextAttributes()
-    const {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-GLenum WebGLRenderingContextWebGPUBase::getError() {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-ScriptObject WebGLRenderingContextWebGPUBase::getExtension(ScriptState*,
-                                                           const String& name) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getFramebufferAttachmentParameter(
-    ScriptState*,
-    GLenum target,
-    GLenum attachment,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getParameter(ScriptState*,
-                                                          GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getProgramParameter(ScriptState*,
-                                                                 WebGLProgram*,
-                                                                 GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-String WebGLRenderingContextWebGPUBase::getProgramInfoLog(WebGLProgram*) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getRenderbufferParameter(
-    ScriptState*,
-    GLenum target,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getShaderParameter(ScriptState*,
-                                                                WebGLShader*,
-                                                                GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-String WebGLRenderingContextWebGPUBase::getShaderInfoLog(WebGLShader*) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLShaderPrecisionFormat*
-WebGLRenderingContextWebGPUBase::getShaderPrecisionFormat(
-    GLenum shader_type,
-    GLenum precision_type) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-String WebGLRenderingContextWebGPUBase::getShaderSource(WebGLShader*) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-std::optional<Vector<String>>
-WebGLRenderingContextWebGPUBase::getSupportedExtensions() {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getTexParameter(ScriptState*,
-                                                             GLenum target,
-                                                             GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getUniform(
-    ScriptState*,
-    WebGLProgram*,
-    const WebGLUniformLocation*) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLUniformLocation* WebGLRenderingContextWebGPUBase::getUniformLocation(
-    WebGLProgram*,
-    const String&) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getVertexAttrib(ScriptState*,
-                                                             GLuint index,
-                                                             GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-int64_t WebGLRenderingContextWebGPUBase::getVertexAttribOffset(GLuint index,
-                                                               GLenum pname) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-void WebGLRenderingContextWebGPUBase::hint(GLenum target, GLenum mode) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::isBuffer(WebGLBuffer*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isEnabled(GLenum cap) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isFramebuffer(WebGLFramebuffer*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isProgram(WebGLProgram*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isRenderbuffer(WebGLRenderbuffer*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isShader(WebGLShader*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::isTexture(WebGLTexture*) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::lineWidth(GLfloat) {
-  NOTIMPLEMENTED();
-}
-void WebGLRenderingContextWebGPUBase::linkProgram(WebGLProgram*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::pixelStorei(GLenum pname, GLint param) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::polygonOffset(GLfloat factor,
-                                                    GLfloat units) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::readPixels(
-    GLint x,
-    GLint y,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::renderbufferStorage(GLenum target,
-                                                          GLenum internalformat,
-                                                          GLsizei width,
-                                                          GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::sampleCoverage(GLfloat value,
-                                                     GLboolean invert) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::scissor(GLint x,
-                                              GLint y,
-                                              GLsizei width,
-                                              GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::shaderSource(WebGLShader*,
-                                                   const String&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilFunc(GLenum func,
-                                                  GLint ref,
-                                                  GLuint mask) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilFuncSeparate(GLenum face,
-                                                          GLenum func,
-                                                          GLint ref,
-                                                          GLuint mask) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilMask(GLuint) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilMaskSeparate(GLenum face,
-                                                          GLuint mask) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilOp(GLenum fail,
-                                                GLenum zfail,
-                                                GLenum zpass) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::stencilOpSeparate(GLenum face,
-                                                        GLenum fail,
-                                                        GLenum zfail,
-                                                        GLenum zpass) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texParameterf(GLenum target,
-                                                    GLenum pname,
-                                                    GLfloat param) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texParameteri(GLenum target,
-                                                    GLenum pname,
-                                                    GLint param) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 ImageData*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(ScriptState*,
-                                                 GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 HTMLImageElement*,
-                                                 ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(ScriptState*,
-                                                 GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 CanvasRenderingContextHost*,
-                                                 ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(ScriptState*,
-                                                 GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 HTMLVideoElement*,
-                                                 ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(ScriptState*,
-                                                 GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 VideoFrame*,
-                                                 ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 ImageBitmap*,
-                                                 ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    ImageData*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(ScriptState*,
-                                                    GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    HTMLImageElement*,
-                                                    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(ScriptState*,
-                                                    GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    CanvasRenderingContextHost*,
-                                                    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-void WebGLRenderingContextWebGPUBase::texSubImage2D(ScriptState*,
-                                                    GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    HTMLVideoElement*,
-                                                    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(ScriptState*,
-                                                    GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    VideoFrame*,
-                                                    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    ImageBitmap*,
-                                                    ExceptionState&) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1f(const WebGLUniformLocation*,
-                                                GLfloat x) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1fv(const WebGLUniformLocation*,
-                                                 base::span<const GLfloat>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1i(const WebGLUniformLocation*,
-                                                GLint x) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1iv(const WebGLUniformLocation*,
-                                                 base::span<const GLint>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2f(const WebGLUniformLocation*,
-                                                GLfloat x,
-                                                GLfloat y) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2fv(const WebGLUniformLocation*,
-                                                 base::span<const GLfloat>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2i(const WebGLUniformLocation*,
-                                                GLint x,
-                                                GLint y) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2iv(const WebGLUniformLocation*,
-                                                 base::span<const GLint>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3f(const WebGLUniformLocation*,
-                                                GLfloat x,
-                                                GLfloat y,
-                                                GLfloat z) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3fv(const WebGLUniformLocation*,
-                                                 base::span<const GLfloat>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3i(const WebGLUniformLocation*,
-                                                GLint x,
-                                                GLint y,
-                                                GLint z) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3iv(const WebGLUniformLocation*,
-                                                 base::span<const GLint>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4f(const WebGLUniformLocation*,
-                                                GLfloat x,
-                                                GLfloat y,
-                                                GLfloat z,
-                                                GLfloat w) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4fv(const WebGLUniformLocation*,
-                                                 base::span<const GLfloat>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4i(const WebGLUniformLocation*,
-                                                GLint x,
-                                                GLint y,
-                                                GLint z,
-                                                GLint w) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4iv(const WebGLUniformLocation*,
-                                                 base::span<const GLint>) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix2fv(
-    const WebGLUniformLocation*,
-    GLboolean transpose,
-    base::span<const GLfloat> value) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix3fv(
-    const WebGLUniformLocation*,
-    GLboolean transpose,
-    base::span<const GLfloat> value) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix4fv(
-    const WebGLUniformLocation*,
-    GLboolean transpose,
-    base::span<const GLfloat> value) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::useProgram(WebGLProgram*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::validateProgram(WebGLProgram*) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib1f(GLuint index, GLfloat x) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib1fv(
-    GLuint index,
-    base::span<const GLfloat> values) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib2f(GLuint index,
-                                                     GLfloat x,
-                                                     GLfloat y) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib2fv(
-    GLuint index,
-    base::span<const GLfloat> values) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib3f(GLuint index,
-                                                     GLfloat x,
-                                                     GLfloat y,
-                                                     GLfloat z) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib3fv(
-    GLuint index,
-    base::span<const GLfloat> values) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib4f(GLuint index,
-                                                     GLfloat x,
-                                                     GLfloat y,
-                                                     GLfloat z,
-                                                     GLfloat w) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttrib4fv(
-    GLuint index,
-    base::span<const GLfloat> values) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribPointer(GLuint index,
-                                                          GLint size,
-                                                          GLenum type,
-                                                          GLboolean normalized,
-                                                          GLsizei stride,
-                                                          int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::viewport(GLint x,
-                                               GLint y,
-                                               GLsizei width,
-                                               GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawingBufferStorage(GLenum sizedformat,
-                                                           GLsizei width,
-                                                           GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::commit() {
-  NOTIMPLEMENTED();
-}
-
-ScriptPromise<IDLUndefined> WebGLRenderingContextWebGPUBase::makeXRCompatible(
-    ScriptState*,
-    ExceptionState&) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-// ****************************************************************************
-// End of WebGLRenderingContextBase's IDL methods
-// ****************************************************************************
-
-// **************************************************************************
-// Start of WebGL2RenderingContextBase's IDL methods
-// **************************************************************************
-
-void WebGLRenderingContextWebGPUBase::bufferData(
-    GLenum target,
-    MaybeShared<DOMArrayBufferView> srcData,
-    GLenum usage,
-    int64_t srcOffset,
-    GLuint length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bufferSubData(
-    GLenum target,
-    int64_t offset,
-    MaybeShared<DOMArrayBufferView> srcData,
-    int64_t srcOffset,
-    GLuint length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::copyBufferSubData(GLenum readTarget,
-                                                        GLenum writeTarget,
-                                                        int64_t readOffset,
-                                                        int64_t writeOffset,
-                                                        int64_t size) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::getBufferSubData(
-    GLenum target,
-    int64_t srcByteOffset,
-    MaybeShared<DOMArrayBufferView> dstData,
-    int64_t dstOffset,
-    GLuint length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::blitFramebuffer(GLint src_x0,
-                                                      GLint src_y0,
-                                                      GLint src_x1,
-                                                      GLint src_y1,
-                                                      GLint dst_x0,
-                                                      GLint dst_y0,
-                                                      GLint dst_x1,
-                                                      GLint dst_y1,
-                                                      GLbitfield mask,
-                                                      GLenum filter) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::framebufferTextureLayer(
-    GLenum target,
-    GLenum attachment,
-    WebGLTexture* texture,
-    GLint level,
-    GLint layer) {
-  NOTIMPLEMENTED();
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getInternalformatParameter(
-    ScriptState* script_state,
-    GLenum target,
-    GLenum internalformat,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-void WebGLRenderingContextWebGPUBase::invalidateFramebuffer(
-    GLenum target,
-    const Vector<GLenum>& attachments) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::invalidateSubFramebuffer(
-    GLenum target,
-    const Vector<GLenum>& attachments,
-    GLint x,
-    GLint y,
-    GLsizei width,
-    GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::readBuffer(GLenum mode) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::renderbufferStorageMultisample(
-    GLenum target,
-    GLsizei samples,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLsizei width,
-                                                 GLsizei height,
-                                                 GLint border,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLsizei width,
-                                                 GLsizei height,
-                                                 GLint border,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 ImageData* pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    HTMLImageElement* image,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    CanvasRenderingContextHost* canvas,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    HTMLVideoElement* video,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    VideoFrame* frame,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    ImageBitmap* bitmap,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage2D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> data,
-    int64_t src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texElement2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLenum format,
-    GLenum type,
-    Element* element,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLsizei width,
-                                                    GLsizei height,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLsizei width,
-                                                    GLsizei height,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    ImageData* pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    HTMLImageElement* image,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    CanvasRenderingContextHost* canvas,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    HTMLVideoElement* video,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    VideoFrame* frame,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    ImageBitmap* bitmap,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels,
-    int64_t src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texStorage2D(GLenum target,
-                                                   GLsizei levels,
-                                                   GLenum internalformat,
-                                                   GLsizei width,
-                                                   GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texStorage3D(GLenum target,
-                                                   GLsizei levels,
-                                                   GLenum internalformat,
-                                                   GLsizei width,
-                                                   GLsizei height,
-                                                   GLsizei depth) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLsizei width,
-                                                 GLsizei height,
-                                                 GLsizei depth,
-                                                 GLint border,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(GLenum target,
-                                                 GLint level,
-                                                 GLint internalformat,
-                                                 GLsizei width,
-                                                 GLsizei height,
-                                                 GLsizei depth,
-                                                 GLint border,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 ImageData* pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    HTMLImageElement* image,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    CanvasRenderingContextHost* canvas,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    HTMLVideoElement* video,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    VideoFrame* frame,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    ImageBitmap* bitmap,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texImage3D(
-    GLenum target,
-    GLint level,
-    GLint internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels,
-    GLuint src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLint zoffset,
-                                                    GLsizei width,
-                                                    GLsizei height,
-                                                    GLsizei depth,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(GLenum target,
-                                                    GLint level,
-                                                    GLint xoffset,
-                                                    GLint yoffset,
-                                                    GLint zoffset,
-                                                    GLsizei width,
-                                                    GLsizei height,
-                                                    GLsizei depth,
-                                                    GLenum format,
-                                                    GLenum type,
-                                                    ImageData* pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    HTMLImageElement* image,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    CanvasRenderingContextHost* context_host,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    HTMLVideoElement* video,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    ScriptState* script_state,
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    VideoFrame* frame,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    ImageBitmap* bitmap,
-    ExceptionState& exception_state) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::texSubImage3D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels,
-    GLuint src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::copyTexSubImage3D(GLenum target,
-                                                        GLint level,
-                                                        GLint xoffset,
-                                                        GLint yoffset,
-                                                        GLint zoffset,
-                                                        GLint x,
-                                                        GLint y,
-                                                        GLsizei width,
-                                                        GLsizei height) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexImage2D(
-    GLenum target,
-    GLint level,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    MaybeShared<DOMArrayBufferView> data,
-    GLuint src_offset,
-    GLuint src_length_override) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    MaybeShared<DOMArrayBufferView> data,
-    GLuint src_offset,
-    GLuint src_length_override) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexImage3D(
-    GLenum target,
-    GLint level,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    MaybeShared<DOMArrayBufferView> data,
-    GLuint src_offset,
-    GLuint src_length_override) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexSubImage3D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    MaybeShared<DOMArrayBufferView> data,
-    GLuint src_offset,
-    GLuint src_length_override) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexImage2D(
-    GLenum target,
-    GLint level,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLint border,
-    GLsizei image_size,
-    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexSubImage2D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLsizei image_size,
-    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexImage3D(
-    GLenum target,
-    GLint level,
-    GLenum internalformat,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLint border,
-    GLsizei image_size,
-    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::compressedTexSubImage3D(
-    GLenum target,
-    GLint level,
-    GLint xoffset,
-    GLint yoffset,
-    GLint zoffset,
-    GLsizei width,
-    GLsizei height,
-    GLsizei depth,
-    GLenum format,
-    GLsizei image_size,
-    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-GLint WebGLRenderingContextWebGPUBase::getFragDataLocation(
-    WebGLProgram* program,
-    const String& name) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1ui(
-    const WebGLUniformLocation* location,
-    GLuint v0) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2ui(
-    const WebGLUniformLocation* location,
-    GLuint v0,
-    GLuint v1) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3ui(
-    const WebGLUniformLocation* location,
-    GLuint v0,
-    GLuint v1,
-    GLuint v2) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4ui(
-    const WebGLUniformLocation* location,
-    GLuint v0,
-    GLuint v1,
-    GLuint v2,
-    GLuint v3) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1fv(
-    const WebGLUniformLocation* location,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2fv(
-    const WebGLUniformLocation* location,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3fv(
-    const WebGLUniformLocation* location,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4fv(
-    const WebGLUniformLocation* location,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1iv(
-    const WebGLUniformLocation* location,
-    base::span<const GLint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2iv(
-    const WebGLUniformLocation* location,
-    base::span<const GLint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3iv(
-    const WebGLUniformLocation* location,
-    base::span<const GLint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4iv(
-    const WebGLUniformLocation* location,
-    base::span<const GLint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform1uiv(
-    const WebGLUniformLocation* location,
-    base::span<const GLuint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform2uiv(
-    const WebGLUniformLocation* location,
-    base::span<const GLuint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform3uiv(
-    const WebGLUniformLocation* location,
-    base::span<const GLuint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniform4uiv(
-    const WebGLUniformLocation* location,
-    base::span<const GLuint> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix2fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix3fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix4fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix2x3fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix3x2fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix2x4fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix4x2fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix3x4fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::uniformMatrix4x3fv(
-    const WebGLUniformLocation* location,
-    GLboolean transpose,
-    base::span<const GLfloat> v,
-    GLuint src_offset,
-    GLuint src_length) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribI4i(GLuint index,
-                                                      GLint x,
-                                                      GLint y,
-                                                      GLint z,
-                                                      GLint w) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribI4iv(
-    GLuint index,
-    base::span<const GLint> v) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribI4ui(GLuint index,
-                                                       GLuint x,
-                                                       GLuint y,
-                                                       GLuint z,
-                                                       GLuint w) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribI4uiv(
-    GLuint index,
-    base::span<const GLuint> v) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribIPointer(GLuint index,
-                                                           GLint size,
-                                                           GLenum type,
-                                                           GLsizei stride,
-                                                           int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::vertexAttribDivisor(GLuint index,
-                                                          GLuint divisor) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawArraysInstanced(
-    GLenum mode,
-    GLint first,
-    GLsizei count,
-    GLsizei instance_count) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawElementsInstanced(
-    GLenum mode,
-    GLsizei count,
-    GLenum type,
-    int64_t offset,
-    GLsizei instance_count) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawRangeElements(GLenum mode,
-                                                        GLuint start,
-                                                        GLuint end,
-                                                        GLsizei count,
-                                                        GLenum type,
-                                                        int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::drawBuffers(
-    const Vector<GLenum>& buffers) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearBufferiv(
-    GLenum buffer,
-    GLint drawbuffer,
-    base::span<const GLint> value,
-    GLuint src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearBufferuiv(
-    GLenum buffer,
-    GLint drawbuffer,
-    base::span<const GLuint> value,
-    GLuint src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearBufferfv(
-    GLenum buffer,
-    GLint drawbuffer,
-    base::span<const GLfloat> value,
-    GLuint src_offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::clearBufferfi(GLenum buffer,
-                                                    GLint drawbuffer,
-                                                    GLfloat depth,
-                                                    GLint stencil) {
-  NOTIMPLEMENTED();
-}
-
-WebGLQuery* WebGLRenderingContextWebGPUBase::createQuery() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::deleteQuery(WebGLQuery* query) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::isQuery(WebGLQuery* query) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::beginQuery(GLenum target,
-                                                 WebGLQuery* query) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::endQuery(GLenum target) {
-  NOTIMPLEMENTED();
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getQuery(ScriptState* script_state,
-                                                      GLenum target,
-                                                      GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getQueryParameter(
-    ScriptState* script_state,
-    WebGLQuery* query,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLSampler* WebGLRenderingContextWebGPUBase::createSampler() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::deleteSampler(WebGLSampler* sampler) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::isSampler(WebGLSampler* sampler) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::bindSampler(GLuint unit,
-                                                  WebGLSampler* sampler) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::samplerParameteri(WebGLSampler* sampler,
-                                                        GLenum pname,
-                                                        GLint param) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::samplerParameterf(WebGLSampler* sampler,
-                                                        GLenum pname,
-                                                        GLfloat param) {
-  NOTIMPLEMENTED();
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getSamplerParameter(
-    ScriptState* script_state,
-    WebGLSampler* sampler,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLSync* WebGLRenderingContextWebGPUBase::fenceSync(GLenum condition,
-                                                      GLbitfield flags) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-bool WebGLRenderingContextWebGPUBase::isSync(WebGLSync* sync) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::deleteSync(WebGLSync* sync) {
-  NOTIMPLEMENTED();
-}
-
-GLenum WebGLRenderingContextWebGPUBase::clientWaitSync(WebGLSync* sync,
-                                                       GLbitfield flags,
-                                                       GLuint64 timeout) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-void WebGLRenderingContextWebGPUBase::waitSync(WebGLSync* sync,
-                                               GLbitfield flags,
-                                               GLint64 timeout) {
-  NOTIMPLEMENTED();
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getSyncParameter(
-    ScriptState* script_state,
-    WebGLSync* sync,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-WebGLTransformFeedback*
-WebGLRenderingContextWebGPUBase::createTransformFeedback() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::deleteTransformFeedback(
-    WebGLTransformFeedback* feedback) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::isTransformFeedback(
-    WebGLTransformFeedback* feedback) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::bindTransformFeedback(
-    GLenum target,
-    WebGLTransformFeedback* feedback) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::beginTransformFeedback(
-    GLenum primitive_mode) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::endTransformFeedback() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::transformFeedbackVaryings(
-    WebGLProgram* program,
-    const Vector<String>& varyings,
-    GLenum buffer_mode) {
-  NOTIMPLEMENTED();
-}
-
-WebGLActiveInfo* WebGLRenderingContextWebGPUBase::getTransformFeedbackVarying(
-    WebGLProgram* program,
-    GLuint index) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::pauseTransformFeedback() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::resumeTransformFeedback() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindBufferBase(GLenum target,
-                                                     GLuint index,
-                                                     WebGLBuffer* buffer) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::bindBufferRange(GLenum target,
-                                                      GLuint index,
-                                                      WebGLBuffer* buffer,
-                                                      int64_t offset,
-                                                      int64_t size) {
-  NOTIMPLEMENTED();
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getIndexedParameter(
-    ScriptState* script_state,
-    GLenum target,
-    GLuint index) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-std::optional<Vector<GLuint>>
-WebGLRenderingContextWebGPUBase::getUniformIndices(
-    WebGLProgram* program,
-    const Vector<String>& uniform_names) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getActiveUniforms(
-    ScriptState* script_state,
-    WebGLProgram* program,
-    const Vector<GLuint>& uniform_indices,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-GLuint WebGLRenderingContextWebGPUBase::getUniformBlockIndex(
-    WebGLProgram* program,
-    const String& uniform_block_name) {
-  NOTIMPLEMENTED();
-  return 0;
-}
-
-ScriptValue WebGLRenderingContextWebGPUBase::getActiveUniformBlockParameter(
-    ScriptState* script_state,
-    WebGLProgram* program,
-    GLuint uniform_block_index,
-    GLenum pname) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-String WebGLRenderingContextWebGPUBase::getActiveUniformBlockName(
-    WebGLProgram* program,
-    GLuint uniform_block_index) {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-void WebGLRenderingContextWebGPUBase::uniformBlockBinding(
-    WebGLProgram* program,
-    GLuint uniform_block_index,
-    GLuint uniform_block_binding) {
-  NOTIMPLEMENTED();
-}
-
-WebGLVertexArrayObject* WebGLRenderingContextWebGPUBase::createVertexArray() {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::deleteVertexArray(
-    WebGLVertexArrayObject* vertex_array) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::isVertexArray(
-    WebGLVertexArrayObject* vertex_array) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::bindVertexArray(
-    WebGLVertexArrayObject* vertex_array) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::readPixels(GLint x,
-                                                 GLint y,
-                                                 GLsizei width,
-                                                 GLsizei height,
-                                                 GLenum format,
-                                                 GLenum type,
-                                                 int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::readPixels(
-    GLint x,
-    GLint y,
-    GLsizei width,
-    GLsizei height,
-    GLenum format,
-    GLenum type,
-    MaybeShared<DOMArrayBufferView> pixels,
-    int64_t offset) {
-  NOTIMPLEMENTED();
-}
-
-// **************************************************************************
-// End of WebGL2RenderingContextBase's IDL methods
-// **************************************************************************
-
-// ****************************************************************************
-// Start of CanvasRenderingContext implementation
-// ****************************************************************************
-SkAlphaType WebGLRenderingContextWebGPUBase::GetAlphaType() const {
-  NOTIMPLEMENTED();
-  return SkAlphaType::kUnknown_SkAlphaType;
-}
-
-viz::SharedImageFormat WebGLRenderingContextWebGPUBase::GetSharedImageFormat()
-    const {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-gfx::ColorSpace WebGLRenderingContextWebGPUBase::GetColorSpace() const {
-  NOTIMPLEMENTED();
-  return {};
-}
-
-bool WebGLRenderingContextWebGPUBase::isContextLost() const {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-scoped_refptr<StaticBitmapImage> WebGLRenderingContextWebGPUBase::GetImage(
-    FlushReason) {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::SetHdrMetadata(
-    const gfx::HDRMetadata& hdr_metadata) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::IsComposited() const {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::IsPaintable() const {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::UsingSwapChain() const {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-void WebGLRenderingContextWebGPUBase::PageVisibilityChanged() {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::PaintRenderingResultsToCanvas(
-    SourceDrawingBuffer) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-bool WebGLRenderingContextWebGPUBase::CopyRenderingResultsToVideoFrame(
-    WebGraphicsContext3DVideoFramePool*,
-    SourceDrawingBuffer,
-    const gfx::ColorSpace&,
-    VideoFrameCopyCompletedCallback) {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-cc::Layer* WebGLRenderingContextWebGPUBase::CcLayer() const {
-  NOTIMPLEMENTED();
-  return nullptr;
-}
-
-void WebGLRenderingContextWebGPUBase::Stop() {
-  NOTIMPLEMENTED();
-}
-
-void WebGLRenderingContextWebGPUBase::FinalizeFrame(FlushReason) {
-  NOTIMPLEMENTED();
-}
-
-bool WebGLRenderingContextWebGPUBase::PushFrame() {
-  NOTIMPLEMENTED();
-  return false;
-}
-
-// ****************************************************************************
-// End of CanvasRenderingContext implementation
-// ****************************************************************************
-
-void WebGLRenderingContextWebGPUBase::Trace(Visitor* visitor) const {
-  WebGLContextObjectSupport::Trace(visitor);
-  CanvasRenderingContext::Trace(visitor);
-}
-}  // namespace blink
diff --git a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h b/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h
deleted file mode 100644
index 10df703f34e8357a08f3d891e4b7291e247e3adc..0000000000000000000000000000000000000000
--- a/third_party/blink/renderer/modules/webgl/webgl_rendering_context_webgpu_base.h
+++ /dev/null
@@ -1,1285 +0,0 @@
-// Copyright 2025 The Chromium Authors
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-
-#ifndef THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_BASE_H_
-#define THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_BASE_H_
-
-#include "third_party/blink/renderer/bindings/core/v8/script_promise_resolver.h"
-#include "third_party/blink/renderer/bindings/core/v8/script_value.h"
-#include "third_party/blink/renderer/bindings/core/v8/v8_predefined_color_space.h"
-#include "third_party/blink/renderer/bindings/modules/v8/v8_webgl_context_attributes.h"
-#include "third_party/blink/renderer/core/html/canvas/canvas_rendering_context.h"
-#include "third_party/blink/renderer/modules/webgl/webgl_context_object_support.h"
-#include "third_party/blink/renderer/platform/bindings/script_wrappable.h"
-#include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
-
-namespace blink {
-
-class ExceptionState;
-class HTMLImageElement;
-class HTMLVideoElement;
-class ImageBitmap;
-class ImageData;
-class ScriptState;
-class V8PredefinedColorSpace;
-class V8UnionHTMLCanvasElementOrOffscreenCanvas;
-class VideoFrame;
-class WebGLActiveInfo;
-class WebGLBuffer;
-class WebGLFramebuffer;
-class WebGLProgram;
-class WebGLQuery;
-class WebGLRenderbuffer;
-class WebGLSampler;
-class WebGLShader;
-class WebGLShaderPrecisionFormat;
-class WebGLSync;
-class WebGLTexture;
-class WebGLTransformFeedback;
-class WebGLUniformLocation;
-class WebGLVertexArrayObject;
-
-class MODULES_EXPORT WebGLRenderingContextWebGPUBase
-    : public WebGLContextObjectSupport,
-      public CanvasRenderingContext {
- public:
-  WebGLRenderingContextWebGPUBase(
-      CanvasRenderingContextHost* host,
-      const CanvasContextCreationAttributesCore& requested_attributes,
-      CanvasRenderingAPI api);
-  ~WebGLRenderingContextWebGPUBase() override;
-
-  WebGLRenderingContextWebGPUBase(const WebGLRenderingContextWebGPUBase&) =
-      delete;
-  WebGLRenderingContextWebGPUBase& operator=(
-      const WebGLRenderingContextWebGPUBase&) = delete;
-
-  // **************************************************************************
-  // Start of WebGLRenderingContextBase's IDL methods
-  // **************************************************************************
-  V8UnionHTMLCanvasElementOrOffscreenCanvas* getHTMLOrOffscreenCanvas() const;
-
-  int drawingBufferWidth() const;
-  int drawingBufferHeight() const;
-  GLenum drawingBufferFormat() const;
-  V8PredefinedColorSpace drawingBufferColorSpace() const;
-  void setDrawingBufferColorSpace(const V8PredefinedColorSpace& color_space,
-                                  ExceptionState&);
-  V8PredefinedColorSpace unpackColorSpace() const;
-  void setUnpackColorSpace(const V8PredefinedColorSpace& color_space,
-                           ExceptionState&);
-
-  void activeTexture(GLenum texture);
-  void attachShader(WebGLProgram*, WebGLShader*);
-
-  void bindAttribLocation(WebGLProgram*, GLuint index, const String& name);
-  void bindBuffer(GLenum target, WebGLBuffer* buffer);
-  void bindFramebuffer(GLenum target, WebGLFramebuffer*);
-  void bindRenderbuffer(GLenum target, WebGLRenderbuffer*);
-  void bindTexture(GLenum target, WebGLTexture*);
-  void blendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
-  void blendEquation(GLenum mode);
-  void blendEquationSeparate(GLenum mode_rgb, GLenum mode_alpha);
-  void blendFunc(GLenum sfactor, GLenum dfactor);
-  void blendFuncSeparate(GLenum src_rgb,
-                         GLenum dst_rgb,
-                         GLenum src_alpha,
-                         GLenum dst_alpha);
-
-  void bufferData(GLenum target, int64_t size, GLenum usage);
-  void bufferData(GLenum target, DOMArrayBufferBase* data, GLenum usage);
-  void bufferData(GLenum target,
-                  MaybeShared<DOMArrayBufferView> data,
-                  GLenum usage);
-  void bufferSubData(GLenum target,
-                     int64_t offset,
-                     base::span<const uint8_t> data);
-
-  GLenum checkFramebufferStatus(GLenum target);
-  void clear(GLbitfield mask);
-  void clearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
-  void clearDepth(GLfloat);
-  void clearStencil(GLint);
-  void colorMask(GLboolean red,
-                 GLboolean green,
-                 GLboolean blue,
-                 GLboolean alpha);
-  void compileShader(WebGLShader*);
-
-  void compressedTexImage2D(GLenum target,
-                            GLint level,
-                            GLenum internalformat,
-                            GLsizei width,
-                            GLsizei height,
-                            GLint border,
-                            MaybeShared<DOMArrayBufferView> data);
-  void compressedTexSubImage2D(GLenum target,
-                               GLint level,
-                               GLint xoffset,
-                               GLint yoffset,
-                               GLsizei width,
-                               GLsizei height,
-                               GLenum format,
-                               MaybeShared<DOMArrayBufferView> data);
-  void copyTexImage2D(GLenum target,
-                      GLint level,
-                      GLenum internalformat,
-                      GLint x,
-                      GLint y,
-                      GLsizei width,
-                      GLsizei height,
-                      GLint border);
-  void copyTexSubImage2D(GLenum target,
-                         GLint level,
-                         GLint xoffset,
-                         GLint yoffset,
-                         GLint x,
-                         GLint y,
-                         GLsizei width,
-                         GLsizei height);
-
-  WebGLBuffer* createBuffer();
-  WebGLFramebuffer* createFramebuffer();
-  WebGLProgram* createProgram();
-  WebGLRenderbuffer* createRenderbuffer();
-  WebGLShader* createShader(GLenum type);
-  WebGLTexture* createTexture();
-
-  void cullFace(GLenum mode);
-
-  void deleteBuffer(WebGLBuffer*);
-  void deleteFramebuffer(WebGLFramebuffer*);
-  void deleteProgram(WebGLProgram*);
-  void deleteRenderbuffer(WebGLRenderbuffer*);
-  void deleteShader(WebGLShader*);
-  void deleteTexture(WebGLTexture*);
-
-  void depthFunc(GLenum);
-  void depthMask(GLboolean);
-  void depthRange(GLfloat z_near, GLfloat z_far);
-  void detachShader(WebGLProgram*, WebGLShader*);
-  void disable(GLenum cap);
-  void disableVertexAttribArray(GLuint index);
-  void drawArrays(GLenum mode, GLint first, GLsizei count);
-  void drawElements(GLenum mode, GLsizei count, GLenum type, int64_t offset);
-
-  void enable(GLenum cap);
-  void enableVertexAttribArray(GLuint index);
-  void finish();
-  void flush();
-  void framebufferRenderbuffer(GLenum target,
-                               GLenum attachment,
-                               GLenum renderbuffertarget,
-                               WebGLRenderbuffer*);
-  void framebufferTexture2D(GLenum target,
-                            GLenum attachment,
-                            GLenum textarget,
-                            WebGLTexture*,
-                            GLint level);
-  void frontFace(GLenum mode);
-  void generateMipmap(GLenum target);
-
-  WebGLActiveInfo* getActiveAttrib(WebGLProgram*, GLuint index);
-  WebGLActiveInfo* getActiveUniform(WebGLProgram*, GLuint index);
-  std::optional<HeapVector<Member<WebGLShader>>> getAttachedShaders(
-      WebGLProgram*);
-  GLint getAttribLocation(WebGLProgram*, const String& name);
-  ScriptValue getBufferParameter(ScriptState*, GLenum target, GLenum pname);
-  WebGLContextAttributes* getContextAttributes() const;
-  GLenum getError();
-  ScriptObject getExtension(ScriptState*, const String& name);
-  ScriptValue getFramebufferAttachmentParameter(ScriptState*,
-                                                GLenum target,
-                                                GLenum attachment,
-                                                GLenum pname);
-  ScriptValue getParameter(ScriptState*, GLenum pname);
-  ScriptValue getProgramParameter(ScriptState*, WebGLProgram*, GLenum pname);
-  String getProgramInfoLog(WebGLProgram*);
-  ScriptValue getRenderbufferParameter(ScriptState*,
-                                       GLenum target,
-                                       GLenum pname);
-  ScriptValue getShaderParameter(ScriptState*, WebGLShader*, GLenum pname);
-  String getShaderInfoLog(WebGLShader*);
-  WebGLShaderPrecisionFormat* getShaderPrecisionFormat(GLenum shader_type,
-                                                       GLenum precision_type);
-  String getShaderSource(WebGLShader*);
-  std::optional<Vector<String>> getSupportedExtensions();
-  ScriptValue getTexParameter(ScriptState*, GLenum target, GLenum pname);
-  ScriptValue getUniform(ScriptState*,
-                         WebGLProgram*,
-                         const WebGLUniformLocation*);
-  WebGLUniformLocation* getUniformLocation(WebGLProgram*, const String&);
-  ScriptValue getVertexAttrib(ScriptState*, GLuint index, GLenum pname);
-  int64_t getVertexAttribOffset(GLuint index, GLenum pname);
-
-  void hint(GLenum target, GLenum mode);
-  bool isBuffer(WebGLBuffer*);
-  bool isEnabled(GLenum cap);
-  bool isFramebuffer(WebGLFramebuffer*);
-  bool isProgram(WebGLProgram*);
-  bool isRenderbuffer(WebGLRenderbuffer*);
-  bool isShader(WebGLShader*);
-  bool isTexture(WebGLTexture*);
-
-  void lineWidth(GLfloat);
-  void linkProgram(WebGLProgram*);
-  void pixelStorei(GLenum pname, GLint param);
-  void polygonOffset(GLfloat factor, GLfloat units);
-
-  void readPixels(GLint x,
-                  GLint y,
-                  GLsizei width,
-                  GLsizei height,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView> pixels);
-
-  void renderbufferStorage(GLenum target,
-                           GLenum internalformat,
-                           GLsizei width,
-                           GLsizei height);
-
-  void sampleCoverage(GLfloat value, GLboolean invert);
-  void scissor(GLint x, GLint y, GLsizei width, GLsizei height);
-  void shaderSource(WebGLShader*, const String&);
-  void stencilFunc(GLenum func, GLint ref, GLuint mask);
-  void stencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
-  void stencilMask(GLuint);
-  void stencilMaskSeparate(GLenum face, GLuint mask);
-  void stencilOp(GLenum fail, GLenum zfail, GLenum zpass);
-  void stencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
-
-  void texParameterf(GLenum target, GLenum pname, GLfloat param);
-  void texParameteri(GLenum target, GLenum pname, GLint param);
-
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView>);
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  ImageData*);
-  void texImage2D(ScriptState*,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  HTMLImageElement*,
-                  ExceptionState&);
-  void texImage2D(ScriptState*,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  CanvasRenderingContextHost*,
-                  ExceptionState&);
-  void texImage2D(ScriptState*,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  HTMLVideoElement*,
-                  ExceptionState&);
-  void texImage2D(ScriptState*,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  VideoFrame*,
-                  ExceptionState&);
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLenum format,
-                  GLenum type,
-                  ImageBitmap*,
-                  ExceptionState&);
-
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     MaybeShared<DOMArrayBufferView>);
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     ImageData*);
-  void texSubImage2D(ScriptState*,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     HTMLImageElement*,
-                     ExceptionState&);
-  void texSubImage2D(ScriptState*,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     CanvasRenderingContextHost*,
-                     ExceptionState&);
-  void texSubImage2D(ScriptState*,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     HTMLVideoElement*,
-                     ExceptionState&);
-  void texSubImage2D(ScriptState*,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     VideoFrame*,
-                     ExceptionState&);
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLenum format,
-                     GLenum type,
-                     ImageBitmap*,
-                     ExceptionState&);
-
-  void uniform1f(const WebGLUniformLocation*, GLfloat x);
-  void uniform1fv(const WebGLUniformLocation*, base::span<const GLfloat>);
-  void uniform1i(const WebGLUniformLocation*, GLint x);
-  void uniform1iv(const WebGLUniformLocation*, base::span<const GLint>);
-  void uniform2f(const WebGLUniformLocation*, GLfloat x, GLfloat y);
-  void uniform2fv(const WebGLUniformLocation*, base::span<const GLfloat>);
-  void uniform2i(const WebGLUniformLocation*, GLint x, GLint y);
-  void uniform2iv(const WebGLUniformLocation*, base::span<const GLint>);
-  void uniform3f(const WebGLUniformLocation*, GLfloat x, GLfloat y, GLfloat z);
-  void uniform3fv(const WebGLUniformLocation*, base::span<const GLfloat>);
-  void uniform3i(const WebGLUniformLocation*, GLint x, GLint y, GLint z);
-  void uniform3iv(const WebGLUniformLocation*, base::span<const GLint>);
-  void uniform4f(const WebGLUniformLocation*,
-                 GLfloat x,
-                 GLfloat y,
-                 GLfloat z,
-                 GLfloat w);
-  void uniform4fv(const WebGLUniformLocation*, base::span<const GLfloat>);
-  void uniform4i(const WebGLUniformLocation*,
-                 GLint x,
-                 GLint y,
-                 GLint z,
-                 GLint w);
-  void uniform4iv(const WebGLUniformLocation*, base::span<const GLint>);
-
-  void uniformMatrix2fv(const WebGLUniformLocation*,
-                        GLboolean transpose,
-                        base::span<const GLfloat> value);
-  void uniformMatrix3fv(const WebGLUniformLocation*,
-                        GLboolean transpose,
-                        base::span<const GLfloat> value);
-  void uniformMatrix4fv(const WebGLUniformLocation*,
-                        GLboolean transpose,
-                        base::span<const GLfloat> value);
-
-  void useProgram(WebGLProgram*);
-  void validateProgram(WebGLProgram*);
-
-  void vertexAttrib1f(GLuint index, GLfloat x);
-  void vertexAttrib1fv(GLuint index, base::span<const GLfloat> values);
-  void vertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
-  void vertexAttrib2fv(GLuint index, base::span<const GLfloat> values);
-  void vertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
-  void vertexAttrib3fv(GLuint index, base::span<const GLfloat> values);
-  void vertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
-  void vertexAttrib4fv(GLuint index, base::span<const GLfloat> values);
-  void vertexAttribPointer(GLuint index,
-                           GLint size,
-                           GLenum type,
-                           GLboolean normalized,
-                           GLsizei stride,
-                           int64_t offset);
-
-  void viewport(GLint x, GLint y, GLsizei width, GLsizei height);
-
-  void drawingBufferStorage(GLenum sizedformat, GLsizei width, GLsizei height);
-
-  void commit();
-
-  ScriptPromise<IDLUndefined> makeXRCompatible(ScriptState*, ExceptionState&);
-  // **************************************************************************
-  // End of WebGLRenderingContextBase's IDL methods
-  // **************************************************************************
-
-  // **************************************************************************
-  // Start of WebGL2RenderingContextBase's IDL methods
-  // **************************************************************************
-
-  /* Buffer objects */
-  void bufferData(GLenum target,
-                  MaybeShared<DOMArrayBufferView> srcData,
-                  GLenum usage,
-                  int64_t srcOffset,
-                  GLuint length);
-  void bufferSubData(GLenum target,
-                     int64_t offset,
-                     MaybeShared<DOMArrayBufferView> srcData,
-                     int64_t srcOffset,
-                     GLuint length);
-  void copyBufferSubData(GLenum readTarget,
-                         GLenum writeTarget,
-                         int64_t readOffset,
-                         int64_t writeOffset,
-                         int64_t size);
-  void getBufferSubData(GLenum target,
-                        int64_t srcByteOffset,
-                        MaybeShared<DOMArrayBufferView> dstData,
-                        int64_t dstOffset,
-                        GLuint length);
-
-  /* Framebuffer objects */
-  void blitFramebuffer(GLint src_x0,
-                       GLint src_y0,
-                       GLint src_x1,
-                       GLint src_y1,
-                       GLint dst_x0,
-                       GLint dst_y0,
-                       GLint dst_x1,
-                       GLint dst_y1,
-                       GLbitfield mask,
-                       GLenum filter);
-  void framebufferTextureLayer(GLenum target,
-                               GLenum attachment,
-                               WebGLTexture* texture,
-                               GLint level,
-                               GLint layer);
-  ScriptValue getInternalformatParameter(ScriptState* script_state,
-                                         GLenum target,
-                                         GLenum internalformat,
-                                         GLenum pname);
-  void invalidateFramebuffer(GLenum target, const Vector<GLenum>& attachments);
-  void invalidateSubFramebuffer(GLenum target,
-                                const Vector<GLenum>& attachments,
-                                GLint x,
-                                GLint y,
-                                GLsizei width,
-                                GLsizei height);
-  void readBuffer(GLenum mode);
-
-  /* Renderbuffer objects */
-  void renderbufferStorageMultisample(GLenum target,
-                                      GLsizei samples,
-                                      GLenum internalformat,
-                                      GLsizei width,
-                                      GLsizei height);
-
-  /* Texture objects */
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  int64_t offset);
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  ImageData* pixels);
-  void texImage2D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  HTMLImageElement* image,
-                  ExceptionState& exception_state);
-  // Handles both OffscreenCanvas and HTMLCanvasElement
-  void texImage2D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  CanvasRenderingContextHost* canvas,
-                  ExceptionState& exception_state);
-  void texImage2D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  HTMLVideoElement* video,
-                  ExceptionState& exception_state);
-  void texImage2D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  VideoFrame* frame,
-                  ExceptionState& exception_state);
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  ImageBitmap* bitmap,
-                  ExceptionState& exception_state);
-  void texImage2D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView> data,
-                  int64_t src_offset);
-
-  void texElement2D(ScriptState* script_state,
-                    GLenum target,
-                    GLint level,
-                    GLint internalformat,
-                    GLenum format,
-                    GLenum type,
-                    Element* element,
-                    ExceptionState& exception_state);
-
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     int64_t offset);
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     ImageData* pixels);
-  void texSubImage2D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     HTMLImageElement* image,
-                     ExceptionState& exception_state);
-  // Handles both OffscreenCanvas and HTMLCanvasElement
-  void texSubImage2D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     CanvasRenderingContextHost* canvas,
-                     ExceptionState& exception_state);
-  void texSubImage2D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     HTMLVideoElement* video,
-                     ExceptionState& exception_state);
-  void texSubImage2D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     VideoFrame* frame,
-                     ExceptionState& exception_state);
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     ImageBitmap* bitmap,
-                     ExceptionState& exception_state);
-  void texSubImage2D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLenum format,
-                     GLenum type,
-                     MaybeShared<DOMArrayBufferView> pixels,
-                     int64_t src_offset);
-
-  void texStorage2D(GLenum target,
-                    GLsizei levels,
-                    GLenum internalformat,
-                    GLsizei width,
-                    GLsizei height);
-  void texStorage3D(GLenum target,
-                    GLsizei levels,
-                    GLenum internalformat,
-                    GLsizei width,
-                    GLsizei height,
-                    GLsizei depth);
-  void texImage3D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  int64_t offset);
-  void texImage3D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  ImageData* pixels);
-  void texImage3D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  HTMLImageElement* image,
-                  ExceptionState& exception_state);
-  // Handles both OffscreenCanvas and HTMLCanvasElement
-  void texImage3D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  CanvasRenderingContextHost* canvas,
-                  ExceptionState& exception_state);
-  void texImage3D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  HTMLVideoElement* video,
-                  ExceptionState& exception_state);
-  void texImage3D(ScriptState* script_state,
-                  GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  VideoFrame* frame,
-                  ExceptionState& exception_state);
-  void texImage3D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  ImageBitmap* bitmap,
-                  ExceptionState& exception_state);
-  void texImage3D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView> pixels);
-  void texImage3D(GLenum target,
-                  GLint level,
-                  GLint internalformat,
-                  GLsizei width,
-                  GLsizei height,
-                  GLsizei depth,
-                  GLint border,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView> pixels,
-                  GLuint src_offset);
-  void texSubImage3D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     int64_t offset);
-  void texSubImage3D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     ImageData* pixels);
-  void texSubImage3D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     HTMLImageElement* image,
-                     ExceptionState& exception_state);
-  // Handles both OffscreenCanvas and HTMLCanvasElement
-  void texSubImage3D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     CanvasRenderingContextHost* context_host,
-                     ExceptionState& exception_state);
-  void texSubImage3D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     HTMLVideoElement* video,
-                     ExceptionState& exception_state);
-  void texSubImage3D(ScriptState* script_state,
-                     GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     VideoFrame* frame,
-                     ExceptionState& exception_state);
-  void texSubImage3D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     ImageBitmap* bitmap,
-                     ExceptionState& exception_state);
-  void texSubImage3D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     MaybeShared<DOMArrayBufferView> pixels);
-  void texSubImage3D(GLenum target,
-                     GLint level,
-                     GLint xoffset,
-                     GLint yoffset,
-                     GLint zoffset,
-                     GLsizei width,
-                     GLsizei height,
-                     GLsizei depth,
-                     GLenum format,
-                     GLenum type,
-                     MaybeShared<DOMArrayBufferView> pixels,
-                     GLuint src_offset);
-
-  void copyTexSubImage3D(GLenum target,
-                         GLint level,
-                         GLint xoffset,
-                         GLint yoffset,
-                         GLint zoffset,
-                         GLint x,
-                         GLint y,
-                         GLsizei width,
-                         GLsizei height);
-
-  void compressedTexImage2D(GLenum target,
-                            GLint level,
-                            GLenum internalformat,
-                            GLsizei width,
-                            GLsizei height,
-                            GLint border,
-                            MaybeShared<DOMArrayBufferView> data,
-                            GLuint src_offset,
-                            GLuint src_length_override);
-  void compressedTexSubImage2D(GLenum target,
-                               GLint level,
-                               GLint xoffset,
-                               GLint yoffset,
-                               GLsizei width,
-                               GLsizei height,
-                               GLenum format,
-                               MaybeShared<DOMArrayBufferView> data,
-                               GLuint src_offset,
-                               GLuint src_length_override);
-  void compressedTexImage3D(GLenum target,
-                            GLint level,
-                            GLenum internalformat,
-                            GLsizei width,
-                            GLsizei height,
-                            GLsizei depth,
-                            GLint border,
-                            MaybeShared<DOMArrayBufferView> data,
-                            GLuint src_offset,
-                            GLuint src_length_override);
-  void compressedTexSubImage3D(GLenum target,
-                               GLint level,
-                               GLint xoffset,
-                               GLint yoffset,
-                               GLint zoffset,
-                               GLsizei width,
-                               GLsizei height,
-                               GLsizei depth,
-                               GLenum format,
-                               MaybeShared<DOMArrayBufferView> data,
-                               GLuint src_offset,
-                               GLuint src_length_override);
-  void compressedTexImage2D(GLenum target,
-                            GLint level,
-                            GLenum internalformat,
-                            GLsizei width,
-                            GLsizei height,
-                            GLint border,
-                            GLsizei image_size,
-                            int64_t offset);
-  void compressedTexSubImage2D(GLenum target,
-                               GLint level,
-                               GLint xoffset,
-                               GLint yoffset,
-                               GLsizei width,
-                               GLsizei height,
-                               GLenum format,
-                               GLsizei image_size,
-                               int64_t offset);
-  void compressedTexImage3D(GLenum target,
-                            GLint level,
-                            GLenum internalformat,
-                            GLsizei width,
-                            GLsizei height,
-                            GLsizei depth,
-                            GLint border,
-                            GLsizei image_size,
-                            int64_t offset);
-  void compressedTexSubImage3D(GLenum target,
-                               GLint level,
-                               GLint xoffset,
-                               GLint yoffset,
-                               GLint zoffset,
-                               GLsizei width,
-                               GLsizei height,
-                               GLsizei depth,
-                               GLenum format,
-                               GLsizei image_size,
-                               int64_t offset);
-
-  /* Programs and shaders */
-  GLint getFragDataLocation(WebGLProgram* program, const String& name);
-
-  /* Uniforms and attributes */
-  void uniform1ui(const WebGLUniformLocation* location, GLuint v0);
-  void uniform2ui(const WebGLUniformLocation* location, GLuint v0, GLuint v1);
-  void uniform3ui(const WebGLUniformLocation* location,
-                  GLuint v0,
-                  GLuint v1,
-                  GLuint v2);
-  void uniform4ui(const WebGLUniformLocation* location,
-                  GLuint v0,
-                  GLuint v1,
-                  GLuint v2,
-                  GLuint v3);
-  void uniform1fv(const WebGLUniformLocation* location,
-                  base::span<const GLfloat> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform2fv(const WebGLUniformLocation* location,
-                  base::span<const GLfloat> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform3fv(const WebGLUniformLocation* location,
-                  base::span<const GLfloat> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform4fv(const WebGLUniformLocation* location,
-                  base::span<const GLfloat> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform1iv(const WebGLUniformLocation* location,
-                  base::span<const GLint> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform2iv(const WebGLUniformLocation* location,
-                  base::span<const GLint> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform3iv(const WebGLUniformLocation* location,
-                  base::span<const GLint> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform4iv(const WebGLUniformLocation* location,
-                  base::span<const GLint> v,
-                  GLuint src_offset,
-                  GLuint src_length);
-  void uniform1uiv(const WebGLUniformLocation* location,
-                   base::span<const GLuint> v,
-                   GLuint src_offset,
-                   GLuint src_length);
-  void uniform2uiv(const WebGLUniformLocation* location,
-                   base::span<const GLuint> v,
-                   GLuint src_offset,
-                   GLuint src_length);
-  void uniform3uiv(const WebGLUniformLocation* location,
-                   base::span<const GLuint> v,
-                   GLuint src_offset,
-                   GLuint src_length);
-  void uniform4uiv(const WebGLUniformLocation* location,
-                   base::span<const GLuint> v,
-                   GLuint src_offset,
-                   GLuint src_length);
-  void uniformMatrix2fv(const WebGLUniformLocation* location,
-                        GLboolean transpose,
-                        base::span<const GLfloat> v,
-                        GLuint src_offset,
-                        GLuint src_length);
-  void uniformMatrix3fv(const WebGLUniformLocation* location,
-                        GLboolean transpose,
-                        base::span<const GLfloat> v,
-                        GLuint src_offset,
-                        GLuint src_length);
-  void uniformMatrix4fv(const WebGLUniformLocation* location,
-                        GLboolean transpose,
-                        base::span<const GLfloat> v,
-                        GLuint src_offset,
-                        GLuint src_length);
-  void uniformMatrix2x3fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-  void uniformMatrix3x2fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-  void uniformMatrix2x4fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-  void uniformMatrix4x2fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-  void uniformMatrix3x4fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-  void uniformMatrix4x3fv(const WebGLUniformLocation* location,
-                          GLboolean transpose,
-                          base::span<const GLfloat> v,
-                          GLuint src_offset,
-                          GLuint src_length);
-
-  void vertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
-  void vertexAttribI4iv(GLuint index, base::span<const GLint> v);
-  void vertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
-  void vertexAttribI4uiv(GLuint index, base::span<const GLuint> v);
-  void vertexAttribIPointer(GLuint index,
-                            GLint size,
-                            GLenum type,
-                            GLsizei stride,
-                            int64_t offset);
-
-  /* Writing to the drawing buffer */
-  void vertexAttribDivisor(GLuint index, GLuint divisor);
-  void drawArraysInstanced(GLenum mode,
-                           GLint first,
-                           GLsizei count,
-                           GLsizei instance_count);
-  void drawElementsInstanced(GLenum mode,
-                             GLsizei count,
-                             GLenum type,
-                             int64_t offset,
-                             GLsizei instance_count);
-  void drawRangeElements(GLenum mode,
-                         GLuint start,
-                         GLuint end,
-                         GLsizei count,
-                         GLenum type,
-                         int64_t offset);
-
-  /* Multiple Render Targets */
-  void drawBuffers(const Vector<GLenum>& buffers);
-  void clearBufferiv(GLenum buffer,
-                     GLint drawbuffer,
-                     base::span<const GLint> value,
-                     GLuint src_offset);
-  void clearBufferuiv(GLenum buffer,
-                      GLint drawbuffer,
-                      base::span<const GLuint> value,
-                      GLuint src_offset);
-  void clearBufferfv(GLenum buffer,
-                     GLint drawbuffer,
-                     base::span<const GLfloat> value,
-                     GLuint src_offset);
-  void clearBufferfi(GLenum buffer,
-                     GLint drawbuffer,
-                     GLfloat depth,
-                     GLint stencil);
-
-  /* Query Objects */
-  WebGLQuery* createQuery();
-  void deleteQuery(WebGLQuery* query);
-  bool isQuery(WebGLQuery* query);
-  void beginQuery(GLenum target, WebGLQuery* query);
-  void endQuery(GLenum target);
-  ScriptValue getQuery(ScriptState* script_state, GLenum target, GLenum pname);
-  ScriptValue getQueryParameter(ScriptState* script_state,
-                                WebGLQuery* query,
-                                GLenum pname);
-
-  /* Sampler Objects */
-  WebGLSampler* createSampler();
-  void deleteSampler(WebGLSampler* sampler);
-  bool isSampler(WebGLSampler* sampler);
-  void bindSampler(GLuint unit, WebGLSampler* sampler);
-  void samplerParameteri(WebGLSampler* sampler, GLenum pname, GLint param);
-  void samplerParameterf(WebGLSampler* sampler, GLenum pname, GLfloat param);
-  ScriptValue getSamplerParameter(ScriptState* script_state,
-                                  WebGLSampler* sampler,
-                                  GLenum pname);
-
-  /* Sync objects */
-  WebGLSync* fenceSync(GLenum condition, GLbitfield flags);
-  bool isSync(WebGLSync* sync);
-  void deleteSync(WebGLSync* sync);
-  GLenum clientWaitSync(WebGLSync* sync, GLbitfield flags, GLuint64 timeout);
-  void waitSync(WebGLSync* sync, GLbitfield flags, GLint64 timeout);
-
-  ScriptValue getSyncParameter(ScriptState* script_state,
-                               WebGLSync* sync,
-                               GLenum pname);
-
-  /* Transform Feedback */
-  WebGLTransformFeedback* createTransformFeedback();
-  void deleteTransformFeedback(WebGLTransformFeedback* feedback);
-  bool isTransformFeedback(WebGLTransformFeedback* feedback);
-  void bindTransformFeedback(GLenum target, WebGLTransformFeedback* feedback);
-  void beginTransformFeedback(GLenum primitive_mode);
-  void endTransformFeedback();
-  void transformFeedbackVaryings(WebGLProgram* program,
-                                 const Vector<String>& varyings,
-                                 GLenum buffer_mode);
-  WebGLActiveInfo* getTransformFeedbackVarying(WebGLProgram* program,
-                                               GLuint index);
-  void pauseTransformFeedback();
-  void resumeTransformFeedback();
-
-  /* Uniform Buffer Objects and Transform Feedback Buffers */
-  void bindBufferBase(GLenum target, GLuint index, WebGLBuffer* buffer);
-  void bindBufferRange(GLenum target,
-                       GLuint index,
-                       WebGLBuffer* buffer,
-                       int64_t offset,
-                       int64_t size);
-  ScriptValue getIndexedParameter(ScriptState* script_state,
-                                  GLenum target,
-                                  GLuint index);
-  std::optional<Vector<GLuint>> getUniformIndices(
-      WebGLProgram* program,
-      const Vector<String>& uniform_names);
-  ScriptValue getActiveUniforms(ScriptState* script_state,
-                                WebGLProgram* program,
-                                const Vector<GLuint>& uniform_indices,
-                                GLenum pname);
-  GLuint getUniformBlockIndex(WebGLProgram* program,
-                              const String& uniform_block_name);
-  ScriptValue getActiveUniformBlockParameter(ScriptState* script_state,
-                                             WebGLProgram* program,
-                                             GLuint uniform_block_index,
-                                             GLenum pname);
-  String getActiveUniformBlockName(WebGLProgram* program,
-                                   GLuint uniform_block_index);
-  void uniformBlockBinding(WebGLProgram* program,
-                           GLuint uniform_block_index,
-                           GLuint uniform_block_binding);
-
-  /* Vertex Array Objects */
-  WebGLVertexArrayObject* createVertexArray();
-  void deleteVertexArray(WebGLVertexArrayObject* vertex_array);
-  bool isVertexArray(WebGLVertexArrayObject* vertex_array);
-  void bindVertexArray(WebGLVertexArrayObject* vertex_array);
-
-  /* Reading */
-  void readPixels(GLint x,
-                  GLint y,
-                  GLsizei width,
-                  GLsizei height,
-                  GLenum format,
-                  GLenum type,
-                  int64_t offset);
-  void readPixels(GLint x,
-                  GLint y,
-                  GLsizei width,
-                  GLsizei height,
-                  GLenum format,
-                  GLenum type,
-                  MaybeShared<DOMArrayBufferView> pixels,
-                  int64_t offset);
-
-  // **************************************************************************
-  // End of WebGL2RenderingContextBase's IDL methods
-  // **************************************************************************
-
-  // **************************************************************************
-  // Start of CanvasRenderingContext implementation
-  // **************************************************************************
-  SkAlphaType GetAlphaType() const override;
-  viz::SharedImageFormat GetSharedImageFormat() const override;
-  gfx::ColorSpace GetColorSpace() const override;
-  bool isContextLost() const override;
-  scoped_refptr<StaticBitmapImage> GetImage(FlushReason) override;
-  void SetHdrMetadata(const gfx::HDRMetadata& hdr_metadata) override;
-
-  bool IsComposited() const override;
-  bool IsPaintable() const override;
-  bool UsingSwapChain() const override;
-  void PageVisibilityChanged() override;
-  bool PaintRenderingResultsToCanvas(SourceDrawingBuffer) override;
-  bool CopyRenderingResultsToVideoFrame(
-      WebGraphicsContext3DVideoFramePool*,
-      SourceDrawingBuffer,
-      const gfx::ColorSpace&,
-      VideoFrameCopyCompletedCallback) override;
-
-  cc::Layer* CcLayer() const override;
-  void Stop() override;
-  void FinalizeFrame(FlushReason) override;
-  bool PushFrame() override;
-
-  // **************************************************************************
-  // End of CanvasRenderingContext implementation
-  // **************************************************************************
-
-  void Trace(Visitor*) const override;
-
- private:
-};
-
-}  // namespace blink
-
-#endif  // THIRD_PARTY_BLINK_RENDERER_MODULES_WEBGL_WEBGL_RENDERING_CONTEXT_WEBGPU_BASE_H_
